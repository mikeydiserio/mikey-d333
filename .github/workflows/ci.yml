name: CI

on:
  push:
    branches:
      - master
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  master:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0

      # This enables task distribution via Nx Cloud
      # Run this command as early as possible, before dependencies are installed
      # Learn more at https://nx.dev/ci/reference/nx-cloud-cli#npx-nxcloud-startcirun
      # Connect your workspace by running "nx connect" and uncomment this line to enable task distribution
      # - run: npx nx start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="build"

      # Cache node_modules
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Verify pnpm installation
        run: pnpm --version

      - run: pnpm install --frozen-lockfile

      - uses: nrwl/nx-set-shas@v4

      # Prepend any command with "nx-cloud record --" to record its logs to Nx Cloud
      # - run: npx nx-cloud record -- echo Hello World
      - run: pnpx nx affected -t build

      # Nx Cloud recommends fixes for failures to help you get CI green faster. Learn more: https://nx.dev/ci/features/self-healing-ci
      - run: pnpx nx fix-ci
        if: always()

      - name: Upload build artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          path: './apps/abn-search/dist'

  deploy:
    needs: master

    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/master' && github.event_name == 'push'

    permissions:
      pages: write

      id-token: write

    environment:
      name: github-pages

      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages

        id: deployment

        uses: actions/deploy-pages@v4
